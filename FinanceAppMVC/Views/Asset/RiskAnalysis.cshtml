@model IEnumerable<FinanceAppMVC.Models.Asset>

@{
    ViewBag.Title = "Risk Analysis";
    DateTime StartDate = ViewBag.Date;
    double totalRiskAlloc = 0;
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#date").datepicker({ dateFormat: "yy-mm-dd" });
        $("#date").val("@StartDate.ToString("yyyy-MM-dd")");
    });
</script>

<h2>Risk Analysis</h2>

@using (Html.BeginForm("RiskAnalysis", "Asset", FormMethod.Get))
{
    <div class="editor-field">
        @Html.Label("Pick starting date: ")
        @Html.TextBox("date", null, new { id = "date" })
    </div>
    <input type="submit" value="See prices" />
}

<table width="100%">
    <tr>
        <th>
            Asset
        </th>
        <th>Annualized Mean Rate</th>
        <th>Annualized Std Dev</th>
        <th>
            Risk Allocation %
        </th>
    </tr>
@foreach (var asset in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => asset.Symbol)
        </td>
        <td>
            @(String.Format("{0:P2}", asset.AnnualizedMeanRate))
        </td>
        <td>
            @(String.Format("{0:P2}", asset.AnnualizedStandardDeviation))
        </td>
        <td>
            @{
                double riskAlloc = (1 / asset.AnnualizedStandardDeviation) / ViewBag.TotalInverseVolatility;
                totalRiskAlloc += riskAlloc;
            }
            @(String.Format("{0:P2}", riskAlloc))
        </td>
    </tr>
}
    <tr>
        <td></td>
        <td></td>     
        <td>
            @(String.Format("{0:P2}", totalRiskAlloc))
        </td>
    </tr>
</table>

<table width="100%">
@{
    <tr>
        <th></th>
    @{
    var modelList = Model.ToList<FinanceAppMVC.Models.Asset>();
    for (int i = 0; i < modelList.Count; i++)
    {
        <th>@(modelList[i].Symbol)</th>
    }
    }
    </tr>
    for (int i = 0; i < modelList.Count; i++)
    {
        <tr>
            <td>@(modelList[i].Symbol)</td>
        @{
        for (int j = 0; j < modelList.Count; j++)
        {
            <td>
                @(String.Format("{0}", i >= j ? String.Format("[{0}, {1}]", modelList[i].Symbol, modelList[j].Symbol) : ""))
            </td>
        }
        }
        </tr>
    }
}
</table>